/*!
 * DownloadBuilder http://git.io/r3JMkQ
 */
(function(exports,$,undefined){var accumulateChange,allGroup,defaultCheckAction,flushChanges,groupToggleAlls,triggerCheck;var defaults={components:"input[data-dependencies][name][type=checkbox]",toggleAll:"input[type=checkbox].toggle-all",groupToggleAll:'input[class^="toggle-all-"][type=checkbox]'};function DownloadBuilder(element,options){var self=this;options=$.extend({},DownloadBuilder.defaults,options);this.element=$(element);var componentsSelector=this.componentsSelector=options.components;var toggleAllSelector=options.toggleAll;var groupToggleAllSelector=options.groupToggleAll;this.allComponents=this.element.find(options.components);this.toggleAll=this.element.find(toggleAllSelector);this.groupToggleAlls=this.element.find(groupToggleAllSelector);var dependencies=this.dependencies={};var dependents=this.dependents={};this.allComponents.each(function(){var component=$(this),thisDependencies=component.data("dependencies"),thisName=component.attr("name");if(!thisName||!thisDependencies){return}thisDependencies=thisDependencies.split(",");dependencies[thisName]=$();$.each(thisDependencies,function(){var dependecy=this,dependecyElem=$("[name="+this+"]");dependencies[thisName]=dependencies[thisName].add(dependecyElem);if(!dependents[dependecy]){dependents[dependecy]=$()}dependents[dependecy]=dependents[dependecy].add(component)})});this.element.on("click",toggleAllSelector,function(event){var target=$(event.target);triggerCheck.call(self,event,self.allComponents,target.prop("checked"),{skipDependencies:true})}).on("click",groupToggleAllSelector,function(event){var target=$(event.target);triggerCheck.call(self,event,allGroup.call(self,target),target.prop("checked"))}).on("click",componentsSelector,function(event){var target=$(event.target);triggerCheck.call(self,event,target,target.prop("checked"))}).on("change",componentsSelector,function(event){var target=$(event.target);accumulateChange.call(self,target)})}DownloadBuilder.defaults=defaults;accumulateChange=function(component){if(!this.accChangedComponents){this.accChangedComponents=$()}this.accChangedComponents=this.accChangedComponents.add(component)};allGroup=function(groupToggleAll){var container;var components=$();for(container=groupToggleAll.parent();container.length&&!components.length;container=container.parent()){components=container.find(this.componentsSelector)}return components};defaultCheckAction=function check(components,value,options){var self=this;var depElements=$();var dependencies=this.dependencies;var dependents=this.dependents;components.each(function(){var component=$(this),name=component.attr("name");if(value&&!options.skipDependencies){if(dependencies[name]){depElements=depElements.add(dependencies[name])}}else if(dependents[name]&&!options.skipDependencies){depElements=depElements.add(dependents[name])}if(component.prop("checked")!==value){component.prop("checked",value).trigger("change")}});if(depElements.length){defaultCheckAction.call(this,depElements,value,{skipFlush:true})}if(!options.skipFlush){flushChanges.call(this,value)}};flushChanges=function(value){var event=$.Event("accumulated-change");if(this.accChangedComponents){updateToggleAlls.call(this,this.accChangedComponents,value);this.element.trigger(event,[this.accChangedComponents,value]);delete this.accChangedComponents}};groupToggleAlls=function(components){var self=this;var groupToggleAlls=$();if(!this.component2groupToggleAll){this.component2groupToggleAll={};this.groupToggleAlls.each(function(){var groupToggleAll=$(this);allGroup.call(self,groupToggleAll).each(function(){var component=$(this);var componentName=component.attr("name");self.component2groupToggleAll[componentName]=groupToggleAll})})}components.each(function(){var component=$(this);var componentName=component.attr("name");var groupToggleAll=self.component2groupToggleAll[componentName];groupToggleAlls=groupToggleAlls.add(groupToggleAll)});return groupToggleAlls};triggerCheck=function(clickEvent,components,value,options){var self=this;var extra={};options=options||{};if(!value&&!options.skipDependencies){var affectedComponentNames=[];var affectedDependents=$();var dependents=this.dependents;components.each(function(){var name=$(this).attr("name");if(!dependents[name]){return}var checkedDependents=dependents[name].filter(":checked").not(components);if(checkedDependents.length){affectedComponentNames.push(name);affectedDependents=affectedDependents.add(checkedDependents)}});extra.affectedComponentNames=affectedComponentNames;extra.affectedDependents=affectedDependents}var event=$.Event("check");event.defaultAction=function(){accumulateChange.call(self,components);defaultCheckAction.call(self,components,value,options)};this.element.trigger(event,[components,value,extra]);if(event.isDefaultPrevented()){clickEvent.preventDefault()}else{event.defaultAction()}};updateToggleAlls=function(components,value){var self=this;if(value){groupToggleAlls.call(this,components).each(function(){var groupToggleAll=$(this);var groupComponents=allGroup.call(self,groupToggleAll);if(!groupComponents.filter(":not(:checked)").length){groupToggleAll.prop("checked",true)}});if(!this.allComponents.filter(":not(:checked)").length){this.toggleAll.prop("checked",true)}}else{groupToggleAlls.call(this,components).each(function(){var groupToggleAll=$(this);var groupComponents=allGroup.call(self,groupToggleAll);if(!groupComponents.filter(":checked").length){groupToggleAll.prop("checked",false)}});if(!this.allComponents.filter(":checked").length){this.toggleAll.prop("checked",false)}}};DownloadBuilder.prototype={on:function(){this.element.on.apply(this.element,arguments);return this},set:function(component,value){defaultCheckAction.call(this,$(component),value,{})}};exports.DownloadBuilder=DownloadBuilder})(this,jQuery);